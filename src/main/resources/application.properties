server.port=8080

#server.ssl.key-store-type=JKS
#server.ssl.key-store=classpath:keystore.jks
#server.ssl.key-store-password=123456
#server.ssl.key-alias=tomcat
#
#security.require-ssl=true


jasypt.encryptor.algorithm=PBEWithMD5AndDES
jasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator


spring.datasource.url=jdbc:postgresql://localhost:5432/sma
spring.datasource.username=ENC(8AeVekzcG3bqedcrXfmGUssZ+JgDZ3KZ)
spring.datasource.password=ENC(OX8AtHJIuZrRUmZPbcpVmg==)
spring.datasource.driver-class-name=org.postgresql.Driver

#DEFAULT USER
spring.security.user.name=ENC(/LzvQUN8ogfFg+dGmp7P2jTZiHzrg9Jb)
spring.security.user.password=ENC(Y0QNFzKzSxAv0MT7DrHkeg==)


#debug=true
#trace=true

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
#spring.thymeleaf.cache=false
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
