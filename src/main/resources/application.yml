jwt:
  secretkey: RandomSecret

jasypt:
  encryptor:
    algorithm: PBEWithMD5AndDES
    iv-generator-classname: org.jasypt.iv.NoIvGenerator
server:
  port: 8080
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgres://ENC(GGK8xwj35pJ2wuUnNfn3QhGeOGABIefk):ENC(6hGBlQnMpIekhMF7CkiB21lLNMbQL9tptHrQ4Oy5/oy/mhjF7Q+gkYJahpM2aA7OsnGbhf0peiP45E3OZeIRcRggiM+QxGeRfNj9mmEtzeI=)@ec2-54-196-111-158.compute-1.amazonaws.com:5432/ENC(B81X8/K+6+EYONTwDBkb5uNxzZcWxFKh)
    username: ENC(GGK8xwj35pJ2wuUnNfn3QhGeOGABIefk)
    password: ENC(6hGBlQnMpIekhMF7CkiB21lLNMbQL9tptHrQ4Oy5/oy/mhjF7Q+gkYJahpM2aA7OsnGbhf0peiP45E3OZeIRcRggiM+QxGeRfNj9mmEtzeI=)
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  security:
    user:
      name: ENC(FtbZbtmk067P2BDc97etuwJty9ccyZcV)
      password: ENC(qhqssFHCJOkQW9GXHR75L3ZDnHa+llPp)
# docker-secret:
#   bind-path: /run/secrets

#server.ssl.key-store-type=JKS
#server.ssl.key-store=classpath:keystore.jks
#server.ssl.key-store-password=123456
#server.ssl.key-alias=tomcat
#
#security.require-ssl=true

# jasypt.encryptor.algorithm=PBEWithMD5AndDES
# jasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator

#docker-secret.bind-path=/run/secrets

#debug=true
#trace=true

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.thymeleaf.cache=false
# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
